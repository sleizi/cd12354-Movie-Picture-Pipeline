name: Backend Continuous Integration 

on:
  workflow_dispatch:  
  pull_request:
    branches:
      - main
    paths:
      - 'starter/backend'

jobs:
  LINT-JOB:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
  
    
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install project dependencies
        run: pipenv install --dev
      
      - name: Install dependencies
        run:  pipenv install flake8 

      - name: Lint code
        run:  pipenv run lint   
          
  TEST-JOB:   
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'   
    
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install project dependencies
        run: pipenv install --dev
        
      - name: Install test 
        run: pipenv install pytest

      - name: Test code
        run:  pipenv run test  

  BUILD-JOB:
    runs-on: ubuntu-latest
    needs: 
      - LINT-JOB
      - TEST-JOB
    defaults:
      run:
        working-directory: starter/backend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'   
    
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install project dependencies
        run: pipenv install --dev

      - name: Test code
        run:  pipenv run test      
     
      # Build and push Docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }} 
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: starter/backend
          push: true
          tags: sleizi/my-backend-app:latest